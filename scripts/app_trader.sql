WITH INITIAL_CALC AS ( -- CALCULATED PURCH PRICE, MARKET SPEND, MONTHLY EARNING, PROJ LIFESPAN

WITH COMBINED_DATA AS ( --COMBINED PRICE/RATING/REVIEWCOUNT CTE START --
	
WITH CLEANED_DATA AS (--CLEANED_DATA CTE START --
SELECT 
	
	CASE 
	WHEN TRIM(UPPER(A.NAME)) = TRIM(UPPER(P.NAME)) THEN 'BOTH'
	WHEN TRIM(UPPER(A.NAME)) IS NULL THEN 'PLAY_STORE'
	WHEN TRIM((P.NAME)) IS NULL THEN 'APP_STORE'
	ELSE 'ZZZZZZZZZZZZZZZZZZZZZZ' 
	END 
		AS STORE_LOCATION 

	,COALESCE(--COMBINED APP NAMES
		TRIM(BOTH ' ' FROM UPPER(A.NAME)), TRIM(BOTH ' ' FROM UPPER(P.NAME))) 
			AS ALL_APPS
	
	,CAST(A.PRICE AS MONEY) AS PRICE_A--CAST AS MONEY
	,CAST(P.PRICE AS MONEY) AS PRICE_P
	
	,CAST(A.RATING AS NUMERIC(2, 1)) AS RATING_A--SET RATINGS AS NUMERIC
	,CAST(P.RATING AS NUMERIC(2, 1)) AS RATING_P
	
	,CAST(A.REVIEW_COUNT AS INT) AS REVIEWCOUNT_A--REVIEW COUNT SET TO INT
	,P.REVIEW_COUNT AS REVIEWCOUNT_P
	
	,A.SIZE_BYTES AS SIZE_A
	,P.SIZE AS SIZE_P
	
	,A.CONTENT_RATING AS CONTENTR_A
	,P.CONTENT_RATING AS CONTENTR_P
	
	,A.PRIMARY_GENRE AS GENRE_A
	,P.GENRES AS GENRE_P
	
FROM APP_STORE_APPS AS A
FULL JOIN PLAY_STORE_APPS AS P
ON TRIM(BOTH ' ' FROM UPPER(A.NAME)) = TRIM(BOTH ' ' FROM UPPER(P.NAME))

)	--CLEANED_DATA CTE END

SELECT
	ALL_APPS, STORE_LOCATION, GENRE_A, GENRE_P
	
	,CASE
		WHEN PRICE_A IS NULL THEN PRICE_P
		WHEN PRICE_P IS NULL THEN PRICE_A
		WHEN PRICE_A > PRICE_P THEN PRICE_A--COMBINED PRICE IN ONE COLUMN
		WHEN PRICE_A < PRICE_P THEN PRICE_P
		WHEN PRICE_A = PRICE_P THEN PRICE_A
		ELSE '99999999' 
		END
			AS PRICE_COMBINED
	
	,CASE
		WHEN RATING_A IS NULL THEN RATING_P
		WHEN RATING_P IS NULL THEN RATING_A
		WHEN RATING_P = RATING_A THEN RATING_P
		WHEN RATING_A > RATING_P THEN ROUND((RATING_A + RATING_P) / 2.0, 1) --ROUND TO NEAREST 0.5
		WHEN RATING_A < RATING_P THEN ROUND((RATING_A + RATING_P) / 2.0, 1) 
		END 
			AS RATING_COMBINED
	,REVIEWCOUNT_A
	,REVIEWCOUNT_P
	,CASE
		WHEN REVIEWCOUNT_A IS NULL THEN REVIEWCOUNT_P
		WHEN REVIEWCOUNT_P IS NULL THEN REVIEWCOUNT_A
		WHEN REVIEWCOUNT_A > REVIEWCOUNT_P THEN (REVIEWCOUNT_A + REVIEWCOUNT_P) / 2
		WHEN REVIEWCOUNT_A < REVIEWCOUNT_P THEN (REVIEWCOUNT_A + REVIEWCOUNT_P) / 2
		ELSE 999999
		END 
			AS REVIEW_COUNT
	
FROM
	CLEANED_DATA AS C
) --END COMBINED_DATA CTE --
SELECT
	ALL_APPS, STORE_LOCATION, REVIEW_COUNT, RATING_COMBINED, REVIEWCOUNT_A, REVIEWCOUNT_P, PRICE_COMBINED, GENRE_A, GENRE_P
	,CASE
		WHEN PRICE_COMBINED <= CAST('0.99' AS MONEY) THEN CAST('10000.00' AS MONEY)
		ELSE (CAST(PRICE_COMBINED AS NUMERIC) * 10000)::MONEY
		END 
			AS PURCHASE_PRICE
			
	,CAST(1000 AS MONEY) 
			AS MARKETING_SPEND --CHANGED
	
	,CASE
		WHEN STORE_LOCATION = 'BOTH' THEN CAST(10000 AS MONEY)
		ELSE CAST(5000 AS MONEY)
		END	
			AS MONTHLY_EARNINGS
			
	,ROUND(COALESCE((RATING_COMBINED * 2) + 1, 1.0))*12
			AS LIFESPAN_MONTHS

	

FROM 
	COMBINED_DATA
	
--DONT FORGET THERE ARE DUPS IN THE APPSTORE

) --END INITIAL_CALC CTE --

SELECT 

	DISTINCT ALL_APPS
	,RATING_COMBINED
	,LIFESPAN_MONTHS
	,PRICE_COMBINED
	,PURCHASE_PRICE
	,MARKETING_SPEND*LIFESPAN_MONTHS 
			AS LIFETIME_MARKETING
	,(MARKETING_SPEND*LIFESPAN_MONTHS) + (PURCHASE_PRICE)
			AS TOTAL_COST
	,LIFESPAN_MONTHS
	,(MONTHLY_EARNINGS*LIFESPAN_MONTHS) 
			AS LIFETIME_EARNINGS
	,(MONTHLY_EARNINGS*LIFESPAN_MONTHS) - ((MARKETING_SPEND*LIFESPAN_MONTHS) + (PURCHASE_PRICE))
			AS PROFIT
	,GENRE_A
	,GENRE_P
	
	,RANK()OVER(ORDER BY 
		(MONTHLY_EARNINGS*LIFESPAN_MONTHS) - ((MARKETING_SPEND*LIFESPAN_MONTHS) + (PURCHASE_PRICE)) DESC
		,PURCHASE_PRICE ASC) 
			AS RANK
	
FROM
	INITIAL_CALC
WHERE STORE_LOCATION = 'BOTH'
GROUP BY ALL_APPS, PURCHASE_PRICE, MARKETING_SPEND, LIFESPAN_MONTHS, RATING_COMBINED, REVIEW_COUNT, MONTHLY_EARNINGS, PRICE_COMBINED, GENRE_A, GENRE_P
ORDER BY RANK ASC
LIMIT 10;
